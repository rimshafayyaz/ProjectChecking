<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        pCn7PWqp0gAAAABJRU5ErkJggg==
</value>
  </data>
</root>